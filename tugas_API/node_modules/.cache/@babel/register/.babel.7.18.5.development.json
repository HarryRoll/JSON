{"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Shall\\\\Desktop\\\\Bootcamp Code id\\\\week 3\\\\day 1\\\\tugas_API\\\\server\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Shall\\\\Desktop\\\\Bootcamp Code id\\\\week 3\\\\day 1\\\\tugas_API\",\"filename\":\"C:\\\\Users\\\\Shall\\\\Desktop\\\\Bootcamp Code id\\\\week 3\\\\day 1\\\\tugas_API\\\\server\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Shall\\\\Desktop\\\\Bootcamp Code id\\\\week 3\\\\day 1\\\\tugas_API\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"regenerator\":true},\"externalDependencies\":[]},{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"proposal-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"proposal-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-regenerator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"MemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.18.5:development":{"value":{"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nvar _dotenv = _interopRequireDefault(require(\"dotenv\"));\n\nvar _express = _interopRequireWildcard(require(\"express\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n_dotenv[\"default\"].config();\n\nvar Pool = require('pg').Pool;\n\nvar pool = new Pool({\n  host: \"localhost\",\n  user: \"postgres\",\n  password: \"11081993g\",\n  database: \"Tugas-day1\",\n  port: 5432\n});\nvar app = (0, _express[\"default\"])();\napp.use(_express[\"default\"].json());\nvar port = process.env.PORT || 3003;\napp.listen(port, function () {\n  return console.log(\"Server listening on port \".concat(port));\n});\napp.get('/api/region', function (req, res) {\n  return pool.query('select * from regions', [], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rows);\n  });\n});\napp.get('/api/region/:id', function (req, res) {\n  var id = req.params.id;\n  pool.query('select * from regions where region_id = $1', [id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rows);\n  });\n});\napp.post('/api/region/', function (req, res) {\n  var region_name = req.body.region_name;\n  pool.query('insert into regions (region_name) values ($1)', [region_name], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\napp.put('/api/region/:id', function (req, res) {\n  var id = req.params.id;\n  var name = req.body.name;\n  pool.query(\"update regions set region_name=$1 where region_id=$2\", [name, id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\napp[\"delete\"]('/api/region/:id', function (req, res) {\n  var id = req.params.id;\n  pool.query(\"delete from regions where region_id = $1\", [id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\napp.get('/api/country', function (req, res) {\n  return pool.query('select * from countries', [], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rows);\n  });\n});\napp.get('/api/country/:id', function (req, res) {\n  var id = req.params.id;\n  pool.query('select * from countries where country_id = $1', [id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rows);\n  });\n});\napp.post('/api/country/', function (req, res) {\n  var id = req.params.id;\n  var _req$body = req.body,\n      name = _req$body.name,\n      region = _req$body.region;\n  pool.query('insert into countries (country_id, country_name, region_id) values ($1,$2,$3)', [id, name, region], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\napp.put('/api/country/:id', function (req, res) {\n  var id = req.params.id;\n  var _req$body2 = req.body,\n      name = _req$body2.name,\n      region = _req$body2.region;\n  pool.query(\"update countries set country_name=$1, region_id=$2 where country_id=$3\", [name, region, id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\napp[\"delete\"]('/api/country/:id', function (req, res) {\n  var id = req.params.id;\n  pool.query(\"delete from countries where country_id = $1\", [id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\napp.get('/api/department', function (req, res) {\n  return pool.query('select * from departments', [], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rows);\n  });\n});\napp.get('/api/department/:id', function (req, res) {\n  var id = req.params.id;\n  pool.query('select * from departments where department_id = $1', [id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rows);\n  });\n});\napp.post('/api/department/', function (req, res) {\n  var _req$body3 = req.body,\n      name = _req$body3.name,\n      location = _req$body3.location;\n  pool.query('insert into departments (department_name, location_id) values ($1,$2)', [name, location], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\napp.put('/api/department/:id', function (req, res) {\n  var id = req.params.id;\n  var _req$body4 = req.body,\n      name = _req$body4.name,\n      location = _req$body4.location;\n  pool.query(\"update departments set department_name=$1, location_id=$2 where department_id=$3\", [name, location, id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\napp[\"delete\"]('/api/department/:id', function (req, res) {\n  var id = req.params.id;\n  pool.query(\"delete from departments where department_id = $1\", [id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\napp.get('/api/dependent', function (req, res) {\n  return pool.query('select * from dependents', [], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rows);\n  });\n});\napp.get('/api/dependent/:id', function (req, res) {\n  var id = req.params.id;\n  pool.query('select * from dependents where dependent_id = $1', [id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rows);\n  });\n});\napp.post('/api/dependent/', function (req, res) {\n  var _req$body5 = req.body,\n      firstname = _req$body5.firstname,\n      lastname = _req$body5.lastname,\n      relation = _req$body5.relation,\n      employee_id = _req$body5.employee_id;\n  pool.query('insert into dependents (first_name, last_name, relationship, employee_id) values ($1,$2,$3,$4)', [firstname, lastname, relation, employee_id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\napp.put('/api/dependent/:id', function (req, res) {\n  var id = req.params.id;\n  var _req$body6 = req.body,\n      firstname = _req$body6.firstname,\n      lastname = _req$body6.lastname,\n      relation = _req$body6.relation,\n      employee_id = _req$body6.employee_id;\n  pool.query(\"update dependents set first_name=$1, last_name=$2, relationship=$3, employee_id=$4 where dependent_id=$5\", [firstname, lastname, relation, employee_id, id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\napp[\"delete\"]('/api/dependent/:id', function (req, res) {\n  var id = req.params.id;\n  pool.query(\"delete from dependents where dependent_id = $1\", [id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\napp.get('/api/employee', function (req, res) {\n  return pool.query('select * from employees', [], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rows);\n  });\n});\napp.get('/api/employee/:id', function (req, res) {\n  var id = req.params.id;\n  pool.query('select * from employees where employee_id = $1', [id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rows);\n  });\n});\napp.post('/api/employee/', function (req, res) {\n  var _req$body7 = req.body,\n      firstname = _req$body7.firstname,\n      lastname = _req$body7.lastname,\n      email = _req$body7.email,\n      phone = _req$body7.phone,\n      hire_date = _req$body7.hire_date,\n      job_id = _req$body7.job_id,\n      salary = _req$body7.salary,\n      manager_id = _req$body7.manager_id,\n      department_id = _req$body7.department_id;\n  pool.query('insert into employees (first_name, last_name, email, phone_number, hire_date, job_id, salary, manager_id, department_id) values($1,$2,$3,$4,$5,$6,$7,$8,$9)', [firstname, lastname, email, phone, hire_date, job_id, salary, manager_id, department_id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\napp.put('/api/employee/:id', function (req, res) {\n  var id = req.params.id;\n  var _req$body8 = req.body,\n      firstname = _req$body8.firstname,\n      lastname = _req$body8.lastname,\n      email = _req$body8.email,\n      phone = _req$body8.phone,\n      hire_date = _req$body8.hire_date,\n      job_id = _req$body8.job_id,\n      salary = _req$body8.salary,\n      manager_id = _req$body8.manager_id,\n      department_id = _req$body8.department_id;\n  pool.query(\"update employees set first_name=$1, last_name=$2, email=$3, phone_number=$4, hire_date=$5, job_id=$6, salary=$7, manager_id=$8, department_id=$9 where employee_id=$10\", [firstname, lastname, email, phone, hire_date, job_id, salary, manager_id, department_id, id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\napp[\"delete\"]('/api/employee/:id', function (req, res) {\n  var id = req.params.id;\n  pool.query(\"delete from employees where employee_id = $1\", [id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\napp.get('/api/job', function (req, res) {\n  return pool.query('select * from jobs', [], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rows);\n  });\n});\napp.get('/api/job/:id', function (req, res) {\n  var id = req.params.id;\n  pool.query('select * from jobs where job_id = $1', [id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rows);\n  });\n});\napp.post('/api/job/', function (req, res) {\n  var _req$body9 = req.body,\n      job_title = _req$body9.job_title,\n      min_salary = _req$body9.min_salary,\n      max_salary = _req$body9.max_salary;\n  pool.query('insert into jobs (job_title, min_salary, max_salary) values($1,$2,$3)', [job_title, min_salary, max_salary], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\napp.put('/api/job/:id', function (req, res) {\n  var id = req.params.id;\n  var _req$body10 = req.body,\n      job_title = _req$body10.job_title,\n      min_salary = _req$body10.min_salary,\n      max_salary = _req$body10.max_salary;\n  pool.query(\"update jobs set job_title=$1, min_salary=$2, max_salary=$3 where job_id=$4\", [job_title, min_salary, max_salary, id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\napp[\"delete\"]('/api/job/:id', function (req, res) {\n  var id = req.params.id;\n  pool.query(\"delete from jobs where job_id = $1\", [id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\napp.get('/api/location', function (req, res) {\n  return pool.query('select * from locations', [], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rows);\n  });\n});\napp.get('/api/location/:id', function (req, res) {\n  var id = req.params.id;\n  pool.query('select * from locations where location_id = $1', [id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rows);\n  });\n});\napp.post('/api/location/', function (req, res) {\n  var _req$body11 = req.body,\n      street_address = _req$body11.street_address,\n      postal_code = _req$body11.postal_code,\n      city = _req$body11.city,\n      state_province = _req$body11.state_province,\n      country_id = _req$body11.country_id;\n  pool.query('insert into locations (street_address, postal_code, city, state_province, country_id) values($1,$2,$3,$4,$5)', [street_address, postal_code, city, state_province, country_id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\napp.put('/api/location/:id', function (req, res) {\n  var id = req.params.id;\n  var _req$body12 = req.body,\n      street_address = _req$body12.street_address,\n      postal_code = _req$body12.postal_code,\n      city = _req$body12.city,\n      state_province = _req$body12.state_province,\n      country_id = _req$body12.country_id;\n  pool.query(\"update locations set street_address=$1, postal_code=$2, city=$3, state_province=$4, country_id=$5 where location_id=$6\", [street_address, postal_code, city, state_province, country_id, id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\napp[\"delete\"]('/api/location/:id', function (req, res) {\n  var id = req.params.id;\n  pool.query(\"delete from locations where location_id = $1\", [id], function (error, result) {\n    if (error) {\n      throw error;\n    }\n\n    res.status(200).json(result.rowCount);\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["dotenv","config","Pool","require","pool","host","user","password","database","port","app","express","use","json","process","env","PORT","listen","console","log","get","req","res","query","error","result","status","rows","id","params","post","region_name","body","rowCount","put","name","region","location","firstname","lastname","relation","employee_id","email","phone","hire_date","job_id","salary","manager_id","department_id","job_title","min_salary","max_salary","street_address","postal_code","city","state_province","country_id"],"sourceRoot":"C:\\Users\\Shall\\Desktop\\Bootcamp Code id\\week 3\\day 1\\tugas_API\\server\\","sources":["index.js"],"sourcesContent":["import dotenv from \"dotenv\"\r\nimport express, { response } from \"express\"\r\ndotenv.config()\r\n\r\nconst Pool = require('pg').Pool;\r\nconst pool = new Pool({\r\n    host : \"localhost\",\r\n    user : \"postgres\",\r\n    password : \"11081993g\",\r\n    database : \"Tugas-day1\",\r\n    port : 5432\r\n})\r\n\r\nconst app =express()\r\napp.use(express.json())\r\n\r\nconst port = process.env.PORT || 3003\r\n\r\napp.listen(port,()=>console.log(`Server listening on port ${port}`))\r\n\r\napp.get('/api/region',(req,res)=>\r\n    pool.query('select * from regions',\r\n    [],\r\n    (error,result)=>{\r\n        if(error){\r\n            throw error\r\n        }\r\n        res.status(200).json(result.rows)\r\n    }))\r\n\r\n    app.get('/api/region/:id',(req,res)=>{\r\n        const {id} = req.params\r\n        pool.query('select * from regions where region_id = $1',\r\n        [id],\r\n        (error,result)=>{\r\n            if(error){\r\n                throw error;\r\n            }\r\n            res.status(200).json(result.rows)\r\n        })\r\n    })\r\n\r\n        app.post('/api/region/',(req,res)=>{\r\n            const {region_name} = req.body\r\n            pool.query('insert into regions (region_name) values ($1)',\r\n            [region_name],\r\n            (error,result)=>{\r\n                if(error){\r\n                    throw error;\r\n                }\r\n                res.status(200).json(result.rowCount)\r\n            })\r\n        })\r\n\r\n            app.put('/api/region/:id',(req,res)=>{\r\n                const {id} = req.params\r\n                const {name} = req.body\r\n                pool.query(\"update regions set region_name=$1 where region_id=$2\",\r\n                [name,id],\r\n                (error,result) =>{\r\n                    if(error){\r\n                        throw error;\r\n                    }\r\n                    res.status(200).json(result.rowCount)\r\n                })\r\n            })\r\n\r\n                app.delete('/api/region/:id',(req,res)=>{\r\n                    const {id} = req.params\r\n                    pool.query(\"delete from regions where region_id = $1\",\r\n                    [id],\r\n                    (error,result) =>{\r\n                        if(error){\r\n                            throw error;\r\n                        }\r\n                        res.status(200).json(result.rowCount)\r\n                    })\r\n                })\r\n\r\napp.get('/api/country',(req,res)=>\r\npool.query('select * from countries',\r\n[],\r\n(error,result)=>{\r\n    if(error){\r\n        throw error\r\n    }\r\n    res.status(200).json(result.rows)\r\n}))\r\n\r\n    app.get('/api/country/:id',(req,res)=>{\r\n        const {id} = req.params\r\n        pool.query('select * from countries where country_id = $1',\r\n        [id],\r\n        (error,result)=>{\r\n            if(error){\r\n                throw error;\r\n            }\r\n            res.status(200).json(result.rows)\r\n        })\r\n    })\r\n\r\n        app.post('/api/country/',(req,res)=>{\r\n            const {id} = req.params\r\n            const {name, region} = req.body\r\n            pool.query('insert into countries (country_id, country_name, region_id) values ($1,$2,$3)',\r\n            [id, name, region],\r\n            (error,result)=>{\r\n                if(error){\r\n                    throw error;\r\n                }\r\n                res.status(200).json(result.rowCount)\r\n            })\r\n        })\r\n\r\n\r\n            app.put('/api/country/:id',(req,res)=>{\r\n                const {id} = req.params\r\n                const {name,region} = req.body\r\n                pool.query(\"update countries set country_name=$1, region_id=$2 where country_id=$3\",\r\n                [name,region,id],\r\n                (error,result) =>{\r\n                    if(error){\r\n                        throw error;\r\n                    }\r\n                    res.status(200).json(result.rowCount)\r\n                })\r\n            })\r\n\r\n                app.delete('/api/country/:id',(req,res)=>{\r\n                    const {id} = req.params\r\n                    pool.query(\"delete from countries where country_id = $1\",\r\n                    [id],\r\n                    (error,result) =>{\r\n                        if(error){\r\n                            throw error;\r\n                        }\r\n                        res.status(200).json(result.rowCount)\r\n                    })\r\n                })       \r\n\r\n\r\n\r\napp.get('/api/department',(req,res)=>\r\npool.query('select * from departments',\r\n[],\r\n(error,result)=>{\r\n    if(error){\r\n        throw error\r\n    }\r\n    res.status(200).json(result.rows)\r\n}))\r\n\r\n    app.get('/api/department/:id',(req,res)=>{\r\n        const {id} = req.params\r\n        pool.query('select * from departments where department_id = $1',\r\n        [id],\r\n        (error,result)=>{\r\n            if(error){\r\n                throw error;\r\n            }\r\n            res.status(200).json(result.rows)\r\n        })\r\n    })\r\n\r\n\r\n        app.post('/api/department/',(req,res)=>{\r\n            const {name, location} = req.body\r\n            pool.query('insert into departments (department_name, location_id) values ($1,$2)',\r\n            [name, location],\r\n            (error,result)=>{\r\n                if(error){\r\n                    throw error;\r\n                }\r\n                res.status(200).json(result.rowCount)\r\n            })\r\n        })\r\n\r\n\r\n            app.put('/api/department/:id',(req,res)=>{\r\n                const {id} = req.params\r\n                const {name,location} = req.body\r\n                pool.query(\"update departments set department_name=$1, location_id=$2 where department_id=$3\",\r\n                [name,location,id],\r\n                (error,result) =>{\r\n                    if(error){\r\n                        throw error;\r\n                    }\r\n                    res.status(200).json(result.rowCount)\r\n                })\r\n            })\r\n\r\n                app.delete('/api/department/:id',(req,res)=>{\r\n                    const {id} = req.params\r\n                    pool.query(\"delete from departments where department_id = $1\",\r\n                    [id],\r\n                    (error,result) =>{\r\n                        if(error){\r\n                            throw error;\r\n                        }\r\n                        res.status(200).json(result.rowCount)\r\n                    })\r\n                })   \r\n\r\n\r\napp.get('/api/dependent',(req,res)=>\r\npool.query('select * from dependents',\r\n[],\r\n(error,result)=>{\r\n    if(error){\r\n        throw error\r\n    }\r\n    res.status(200).json(result.rows)\r\n}))\r\n\r\n    app.get('/api/dependent/:id',(req,res)=>{\r\n        const {id} = req.params\r\n        pool.query('select * from dependents where dependent_id = $1',\r\n        [id],\r\n        (error,result)=>{\r\n            if(error){\r\n                throw error;\r\n            }\r\n            res.status(200).json(result.rows)\r\n        })\r\n    })\r\n\r\n        app.post('/api/dependent/',(req,res)=>{\r\n            const {firstname, lastname , relation, employee_id} = req.body\r\n            pool.query('insert into dependents (first_name, last_name, relationship, employee_id) values ($1,$2,$3,$4)',\r\n            [firstname, lastname , relation, employee_id],\r\n            (error,result)=>{\r\n                if(error){\r\n                    throw error;\r\n                }\r\n                res.status(200).json(result.rowCount)\r\n            })\r\n        })\r\n\r\n\r\n            app.put('/api/dependent/:id',(req,res)=>{\r\n                const {id} = req.params\r\n                const {firstname, lastname , relation, employee_id} = req.body\r\n                pool.query(\"update dependents set first_name=$1, last_name=$2, relationship=$3, employee_id=$4 where dependent_id=$5\",\r\n                [firstname, lastname , relation, employee_id, id],\r\n                (error,result) =>{\r\n                    if(error){\r\n                        throw error;\r\n                    }\r\n                    res.status(200).json(result.rowCount)\r\n                })\r\n            })\r\n\r\n                app.delete('/api/dependent/:id',(req,res)=>{\r\n                    const {id} = req.params\r\n                    pool.query(\"delete from dependents where dependent_id = $1\",\r\n                    [id],\r\n                    (error,result) =>{\r\n                        if(error){\r\n                            throw error;\r\n                        }\r\n                        res.status(200).json(result.rowCount)\r\n                    })\r\n                })   \r\n\r\napp.get('/api/employee',(req,res)=>\r\npool.query('select * from employees',\r\n[],\r\n(error,result)=>{\r\n    if(error){\r\n        throw error\r\n    }\r\n    res.status(200).json(result.rows)\r\n}))\r\n\r\n    app.get('/api/employee/:id',(req,res)=>{\r\n        const {id} = req.params\r\n        pool.query('select * from employees where employee_id = $1',\r\n        [id],\r\n        (error,result)=>{\r\n            if(error){\r\n                throw error;\r\n            }\r\n            res.status(200).json(result.rows)\r\n        })\r\n    })\r\n\r\n\r\n        app.post('/api/employee/',(req,res)=>{\r\n            const {firstname, lastname , email, phone, hire_date, job_id, salary, manager_id, department_id} = req.body\r\n            pool.query('insert into employees (first_name, last_name, email, phone_number, hire_date, job_id, salary, manager_id, department_id) values($1,$2,$3,$4,$5,$6,$7,$8,$9)',\r\n            [firstname, lastname , email, phone, hire_date, job_id, salary, manager_id, department_id],\r\n            (error,result)=>{\r\n                if(error){\r\n                    throw error;\r\n                }\r\n                res.status(200).json(result.rowCount)\r\n            })\r\n        })\r\n\r\n\r\n            app.put('/api/employee/:id',(req,res)=>{\r\n                const {id} = req.params\r\n                const {firstname, lastname , email, phone, hire_date, job_id, salary, manager_id, department_id} = req.body\r\n                pool.query(\"update employees set first_name=$1, last_name=$2, email=$3, phone_number=$4, hire_date=$5, job_id=$6, salary=$7, manager_id=$8, department_id=$9 where employee_id=$10\",\r\n                [firstname, lastname , email, phone, hire_date, job_id, salary, manager_id, department_id, id],\r\n                (error,result) =>{\r\n                    if(error){\r\n                        throw error;\r\n                    }\r\n                    res.status(200).json(result.rowCount)\r\n                })\r\n            })\r\n\r\n                app.delete('/api/employee/:id',(req,res)=>{\r\n                    const {id} = req.params\r\n                    pool.query(\"delete from employees where employee_id = $1\",\r\n                    [id],\r\n                    (error,result) =>{\r\n                        if(error){\r\n                            throw error;\r\n                        }\r\n                        res.status(200).json(result.rowCount)\r\n                    })\r\n                })   \r\n\r\n    \r\napp.get('/api/job',(req,res)=>\r\npool.query('select * from jobs',\r\n[],\r\n(error,result)=>{\r\n    if(error){\r\n        throw error\r\n    }\r\n    res.status(200).json(result.rows)\r\n}))\r\n\r\n    app.get('/api/job/:id',(req,res)=>{\r\n        const {id} = req.params\r\n        pool.query('select * from jobs where job_id = $1',\r\n        [id],\r\n        (error,result)=>{\r\n            if(error){\r\n                throw error;\r\n            }\r\n            res.status(200).json(result.rows)\r\n        })\r\n    })\r\n\r\n        app.post('/api/job/',(req,res)=>{\r\n            const {job_title, min_salary, max_salary} = req.body\r\n            pool.query('insert into jobs (job_title, min_salary, max_salary) values($1,$2,$3)',\r\n            [job_title, min_salary, max_salary],\r\n            (error,result)=>{\r\n                if(error){\r\n                    throw error;\r\n                }\r\n                res.status(200).json(result.rowCount)\r\n            })\r\n        })\r\n\r\n\r\n            app.put('/api/job/:id',(req,res)=>{\r\n                const {id} = req.params\r\n                const {job_title, min_salary, max_salary} = req.body\r\n                pool.query(\"update jobs set job_title=$1, min_salary=$2, max_salary=$3 where job_id=$4\",\r\n                [job_title, min_salary, max_salary, id],\r\n                (error,result) =>{\r\n                    if(error){\r\n                        throw error;\r\n                    }\r\n                    res.status(200).json(result.rowCount)\r\n                })\r\n            })\r\n\r\n                app.delete('/api/job/:id',(req,res)=>{\r\n                    const {id} = req.params\r\n                    pool.query(\"delete from jobs where job_id = $1\",\r\n                    [id],\r\n                    (error,result) =>{\r\n                        if(error){\r\n                            throw error;\r\n                        }\r\n                        res.status(200).json(result.rowCount)\r\n                    })\r\n                })   \r\n\r\n\r\napp.get('/api/location',(req,res)=>\r\npool.query('select * from locations',\r\n[],\r\n(error,result)=>{\r\n    if(error){\r\n        throw error\r\n    }\r\n    res.status(200).json(result.rows)\r\n}))\r\n\r\n    app.get('/api/location/:id',(req,res)=>{\r\n        const {id} = req.params\r\n        pool.query('select * from locations where location_id = $1',\r\n        [id],\r\n        (error,result)=>{\r\n            if(error){\r\n                throw error;\r\n            }\r\n            res.status(200).json(result.rows)\r\n        })\r\n    })\r\n\r\n        app.post('/api/location/',(req,res)=>{\r\n            const {street_address, postal_code, city, state_province, country_id} = req.body\r\n            pool.query('insert into locations (street_address, postal_code, city, state_province, country_id) values($1,$2,$3,$4,$5)',\r\n            [street_address, postal_code, city, state_province, country_id],\r\n            (error,result)=>{\r\n                if(error){\r\n                    throw error;\r\n                }\r\n                res.status(200).json(result.rowCount)\r\n            })\r\n        })\r\n\r\n\r\n            app.put('/api/location/:id',(req,res)=>{\r\n                const {id} = req.params\r\n                const {street_address, postal_code, city, state_province, country_id} = req.body\r\n                pool.query(\"update locations set street_address=$1, postal_code=$2, city=$3, state_province=$4, country_id=$5 where location_id=$6\",\r\n                [street_address, postal_code, city, state_province, country_id, id],\r\n                (error,result) =>{\r\n                    if(error){\r\n                        throw error;\r\n                    }\r\n                    res.status(200).json(result.rowCount)\r\n                })\r\n            })\r\n\r\n                app.delete('/api/location/:id',(req,res)=>{\r\n                    const {id} = req.params\r\n                    pool.query(\"delete from locations where location_id = $1\",\r\n                    [id],\r\n                    (error,result) =>{\r\n                        if(error){\r\n                            throw error;\r\n                        }\r\n                        res.status(200).json(result.rowCount)\r\n                    })\r\n                })   \r\n"],"mappings":"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"}},"mtime":1655403992597}}